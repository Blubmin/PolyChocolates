#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolyChocolates
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CAL_POLY_CHOC_DB")]
	public partial class chocolatesDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBAR_WEIGHT_CHECK_ENTRY(BAR_WEIGHT_CHECK_ENTRY instance);
    partial void UpdateBAR_WEIGHT_CHECK_ENTRY(BAR_WEIGHT_CHECK_ENTRY instance);
    partial void DeleteBAR_WEIGHT_CHECK_ENTRY(BAR_WEIGHT_CHECK_ENTRY instance);
    partial void InsertTRACE_ENTRY(TRACE_ENTRY instance);
    partial void UpdateTRACE_ENTRY(TRACE_ENTRY instance);
    partial void DeleteTRACE_ENTRY(TRACE_ENTRY instance);
    partial void InsertMOLD_WEIGHT_CHECK_ENTRY(MOLD_WEIGHT_CHECK_ENTRY instance);
    partial void UpdateMOLD_WEIGHT_CHECK_ENTRY(MOLD_WEIGHT_CHECK_ENTRY instance);
    partial void DeleteMOLD_WEIGHT_CHECK_ENTRY(MOLD_WEIGHT_CHECK_ENTRY instance);
    partial void InsertPRODUCT_ENTRY(PRODUCT_ENTRY instance);
    partial void UpdatePRODUCT_ENTRY(PRODUCT_ENTRY instance);
    partial void DeletePRODUCT_ENTRY(PRODUCT_ENTRY instance);
    partial void InsertQUALITY_ENTRY(QUALITY_ENTRY instance);
    partial void UpdateQUALITY_ENTRY(QUALITY_ENTRY instance);
    partial void DeleteQUALITY_ENTRY(QUALITY_ENTRY instance);
    partial void InsertRECIPE_ENTRY(RECIPE_ENTRY instance);
    partial void UpdateRECIPE_ENTRY(RECIPE_ENTRY instance);
    partial void DeleteRECIPE_ENTRY(RECIPE_ENTRY instance);
    #endregion
		
		public chocolatesDbDataContext() : 
				base(global::PolyChocolates.Properties.Settings.Default.CAL_POLY_CHOC_DBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public chocolatesDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public chocolatesDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public chocolatesDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public chocolatesDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BAR_WEIGHT_CHECK_ENTRY> BAR_WEIGHT_CHECK_ENTRies
		{
			get
			{
				return this.GetTable<BAR_WEIGHT_CHECK_ENTRY>();
			}
		}
		
		public System.Data.Linq.Table<TRACE_ENTRY> TRACE_ENTRies
		{
			get
			{
				return this.GetTable<TRACE_ENTRY>();
			}
		}
		
		public System.Data.Linq.Table<MOLD_WEIGHT_CHECK_ENTRY> MOLD_WEIGHT_CHECK_ENTRies
		{
			get
			{
				return this.GetTable<MOLD_WEIGHT_CHECK_ENTRY>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT_ENTRY> PRODUCT_ENTRies
		{
			get
			{
				return this.GetTable<PRODUCT_ENTRY>();
			}
		}
		
		public System.Data.Linq.Table<QUALITY_ENTRY> QUALITY_ENTRies
		{
			get
			{
				return this.GetTable<QUALITY_ENTRY>();
			}
		}
		
		public System.Data.Linq.Table<RECIPE_ENTRY> RECIPE_ENTRies
		{
			get
			{
				return this.GetTable<RECIPE_ENTRY>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAR_WEIGHT_CHECK_ENTRY")]
	public partial class BAR_WEIGHT_CHECK_ENTRY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BAR_WEIGHT_CHECK_ENTRY_ID;
		
		private double _BAR_1_WEIGHT;
		
		private double _BAR_2_WEIGHT;
		
		private double _BAR_3_WEIGHT;
		
		private double _BAR_4_WEIGHT;
		
		private double _BAR_5_WEIGHT;
		
		private int _QUALITY_ENTRY_ID;
		
		private EntityRef<QUALITY_ENTRY> _QUALITY_ENTRY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBAR_WEIGHT_CHECK_ENTRY_IDChanging(int value);
    partial void OnBAR_WEIGHT_CHECK_ENTRY_IDChanged();
    partial void OnBAR_1_WEIGHTChanging(double value);
    partial void OnBAR_1_WEIGHTChanged();
    partial void OnBAR_2_WEIGHTChanging(double value);
    partial void OnBAR_2_WEIGHTChanged();
    partial void OnBAR_3_WEIGHTChanging(double value);
    partial void OnBAR_3_WEIGHTChanged();
    partial void OnBAR_4_WEIGHTChanging(double value);
    partial void OnBAR_4_WEIGHTChanged();
    partial void OnBAR_5_WEIGHTChanging(double value);
    partial void OnBAR_5_WEIGHTChanged();
    partial void OnQUALITY_ENTRY_IDChanging(int value);
    partial void OnQUALITY_ENTRY_IDChanged();
    #endregion
		
		public BAR_WEIGHT_CHECK_ENTRY()
		{
			this._QUALITY_ENTRY = default(EntityRef<QUALITY_ENTRY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAR_WEIGHT_CHECK_ENTRY_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BAR_WEIGHT_CHECK_ENTRY_ID
		{
			get
			{
				return this._BAR_WEIGHT_CHECK_ENTRY_ID;
			}
			set
			{
				if ((this._BAR_WEIGHT_CHECK_ENTRY_ID != value))
				{
					this.OnBAR_WEIGHT_CHECK_ENTRY_IDChanging(value);
					this.SendPropertyChanging();
					this._BAR_WEIGHT_CHECK_ENTRY_ID = value;
					this.SendPropertyChanged("BAR_WEIGHT_CHECK_ENTRY_ID");
					this.OnBAR_WEIGHT_CHECK_ENTRY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAR_1_WEIGHT", DbType="Float NOT NULL")]
		public double BAR_1_WEIGHT
		{
			get
			{
				return this._BAR_1_WEIGHT;
			}
			set
			{
				if ((this._BAR_1_WEIGHT != value))
				{
					this.OnBAR_1_WEIGHTChanging(value);
					this.SendPropertyChanging();
					this._BAR_1_WEIGHT = value;
					this.SendPropertyChanged("BAR_1_WEIGHT");
					this.OnBAR_1_WEIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAR_2_WEIGHT", DbType="Float NOT NULL")]
		public double BAR_2_WEIGHT
		{
			get
			{
				return this._BAR_2_WEIGHT;
			}
			set
			{
				if ((this._BAR_2_WEIGHT != value))
				{
					this.OnBAR_2_WEIGHTChanging(value);
					this.SendPropertyChanging();
					this._BAR_2_WEIGHT = value;
					this.SendPropertyChanged("BAR_2_WEIGHT");
					this.OnBAR_2_WEIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAR_3_WEIGHT", DbType="Float NOT NULL")]
		public double BAR_3_WEIGHT
		{
			get
			{
				return this._BAR_3_WEIGHT;
			}
			set
			{
				if ((this._BAR_3_WEIGHT != value))
				{
					this.OnBAR_3_WEIGHTChanging(value);
					this.SendPropertyChanging();
					this._BAR_3_WEIGHT = value;
					this.SendPropertyChanged("BAR_3_WEIGHT");
					this.OnBAR_3_WEIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAR_4_WEIGHT", DbType="Float NOT NULL")]
		public double BAR_4_WEIGHT
		{
			get
			{
				return this._BAR_4_WEIGHT;
			}
			set
			{
				if ((this._BAR_4_WEIGHT != value))
				{
					this.OnBAR_4_WEIGHTChanging(value);
					this.SendPropertyChanging();
					this._BAR_4_WEIGHT = value;
					this.SendPropertyChanged("BAR_4_WEIGHT");
					this.OnBAR_4_WEIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAR_5_WEIGHT", DbType="Float NOT NULL")]
		public double BAR_5_WEIGHT
		{
			get
			{
				return this._BAR_5_WEIGHT;
			}
			set
			{
				if ((this._BAR_5_WEIGHT != value))
				{
					this.OnBAR_5_WEIGHTChanging(value);
					this.SendPropertyChanging();
					this._BAR_5_WEIGHT = value;
					this.SendPropertyChanged("BAR_5_WEIGHT");
					this.OnBAR_5_WEIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUALITY_ENTRY_ID", DbType="Int NOT NULL")]
		public int QUALITY_ENTRY_ID
		{
			get
			{
				return this._QUALITY_ENTRY_ID;
			}
			set
			{
				if ((this._QUALITY_ENTRY_ID != value))
				{
					if (this._QUALITY_ENTRY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQUALITY_ENTRY_IDChanging(value);
					this.SendPropertyChanging();
					this._QUALITY_ENTRY_ID = value;
					this.SendPropertyChanged("QUALITY_ENTRY_ID");
					this.OnQUALITY_ENTRY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUALITY_ENTRY_BAR_WEIGHT_CHECK_ENTRY", Storage="_QUALITY_ENTRY", ThisKey="QUALITY_ENTRY_ID", OtherKey="QUALITY_ENTRY_ID", IsForeignKey=true)]
		public QUALITY_ENTRY QUALITY_ENTRY
		{
			get
			{
				return this._QUALITY_ENTRY.Entity;
			}
			set
			{
				QUALITY_ENTRY previousValue = this._QUALITY_ENTRY.Entity;
				if (((previousValue != value) 
							|| (this._QUALITY_ENTRY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUALITY_ENTRY.Entity = null;
						previousValue.BAR_WEIGHT_CHECK_ENTRies.Remove(this);
					}
					this._QUALITY_ENTRY.Entity = value;
					if ((value != null))
					{
						value.BAR_WEIGHT_CHECK_ENTRies.Add(this);
						this._QUALITY_ENTRY_ID = value.QUALITY_ENTRY_ID;
					}
					else
					{
						this._QUALITY_ENTRY_ID = default(int);
					}
					this.SendPropertyChanged("QUALITY_ENTRY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRACE_ENTRY")]
	public partial class TRACE_ENTRY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TRACE_ENTRY_ID;
		
		private int _PRODUCT_ENTRY_ID;
		
		private string _INGREDIENT;
		
		private double _AMOUNT;
		
		private string _SUPPLIER;
		
		private EntityRef<PRODUCT_ENTRY> _PRODUCT_ENTRY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTRACE_ENTRY_IDChanging(int value);
    partial void OnTRACE_ENTRY_IDChanged();
    partial void OnPRODUCT_ENTRY_IDChanging(int value);
    partial void OnPRODUCT_ENTRY_IDChanged();
    partial void OnINGREDIENTChanging(string value);
    partial void OnINGREDIENTChanged();
    partial void OnAMOUNTChanging(double value);
    partial void OnAMOUNTChanged();
    partial void OnSUPPLIERChanging(string value);
    partial void OnSUPPLIERChanged();
    #endregion
		
		public TRACE_ENTRY()
		{
			this._PRODUCT_ENTRY = default(EntityRef<PRODUCT_ENTRY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRACE_ENTRY_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TRACE_ENTRY_ID
		{
			get
			{
				return this._TRACE_ENTRY_ID;
			}
			set
			{
				if ((this._TRACE_ENTRY_ID != value))
				{
					this.OnTRACE_ENTRY_IDChanging(value);
					this.SendPropertyChanging();
					this._TRACE_ENTRY_ID = value;
					this.SendPropertyChanged("TRACE_ENTRY_ID");
					this.OnTRACE_ENTRY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_ENTRY_ID", DbType="Int NOT NULL")]
		public int PRODUCT_ENTRY_ID
		{
			get
			{
				return this._PRODUCT_ENTRY_ID;
			}
			set
			{
				if ((this._PRODUCT_ENTRY_ID != value))
				{
					if (this._PRODUCT_ENTRY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCT_ENTRY_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_ENTRY_ID = value;
					this.SendPropertyChanged("PRODUCT_ENTRY_ID");
					this.OnPRODUCT_ENTRY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INGREDIENT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string INGREDIENT
		{
			get
			{
				return this._INGREDIENT;
			}
			set
			{
				if ((this._INGREDIENT != value))
				{
					this.OnINGREDIENTChanging(value);
					this.SendPropertyChanging();
					this._INGREDIENT = value;
					this.SendPropertyChanged("INGREDIENT");
					this.OnINGREDIENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMOUNT", DbType="Float NOT NULL")]
		public double AMOUNT
		{
			get
			{
				return this._AMOUNT;
			}
			set
			{
				if ((this._AMOUNT != value))
				{
					this.OnAMOUNTChanging(value);
					this.SendPropertyChanging();
					this._AMOUNT = value;
					this.SendPropertyChanged("AMOUNT");
					this.OnAMOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPLIER", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SUPPLIER
		{
			get
			{
				return this._SUPPLIER;
			}
			set
			{
				if ((this._SUPPLIER != value))
				{
					this.OnSUPPLIERChanging(value);
					this.SendPropertyChanging();
					this._SUPPLIER = value;
					this.SendPropertyChanged("SUPPLIER");
					this.OnSUPPLIERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_ENTRY_TRACE_ENTRY", Storage="_PRODUCT_ENTRY", ThisKey="PRODUCT_ENTRY_ID", OtherKey="PRODUCT_ENTRY_ID", IsForeignKey=true)]
		public PRODUCT_ENTRY PRODUCT_ENTRY
		{
			get
			{
				return this._PRODUCT_ENTRY.Entity;
			}
			set
			{
				PRODUCT_ENTRY previousValue = this._PRODUCT_ENTRY.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT_ENTRY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT_ENTRY.Entity = null;
						previousValue.TRACE_ENTRies.Remove(this);
					}
					this._PRODUCT_ENTRY.Entity = value;
					if ((value != null))
					{
						value.TRACE_ENTRies.Add(this);
						this._PRODUCT_ENTRY_ID = value.PRODUCT_ENTRY_ID;
					}
					else
					{
						this._PRODUCT_ENTRY_ID = default(int);
					}
					this.SendPropertyChanged("PRODUCT_ENTRY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MOLD_WEIGHT_CHECK_ENTRY")]
	public partial class MOLD_WEIGHT_CHECK_ENTRY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MOLD_WEIGHT_CHECK_ENTRY_ID;
		
		private double _MEASURED_WEIGHT;
		
		private int _QUALITY_ENTRY_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMOLD_WEIGHT_CHECK_ENTRY_IDChanging(int value);
    partial void OnMOLD_WEIGHT_CHECK_ENTRY_IDChanged();
    partial void OnMEASURED_WEIGHTChanging(double value);
    partial void OnMEASURED_WEIGHTChanged();
    partial void OnQUALITY_ENTRY_IDChanging(int value);
    partial void OnQUALITY_ENTRY_IDChanged();
    #endregion
		
		public MOLD_WEIGHT_CHECK_ENTRY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOLD_WEIGHT_CHECK_ENTRY_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MOLD_WEIGHT_CHECK_ENTRY_ID
		{
			get
			{
				return this._MOLD_WEIGHT_CHECK_ENTRY_ID;
			}
			set
			{
				if ((this._MOLD_WEIGHT_CHECK_ENTRY_ID != value))
				{
					this.OnMOLD_WEIGHT_CHECK_ENTRY_IDChanging(value);
					this.SendPropertyChanging();
					this._MOLD_WEIGHT_CHECK_ENTRY_ID = value;
					this.SendPropertyChanged("MOLD_WEIGHT_CHECK_ENTRY_ID");
					this.OnMOLD_WEIGHT_CHECK_ENTRY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEASURED_WEIGHT", DbType="Float NOT NULL")]
		public double MEASURED_WEIGHT
		{
			get
			{
				return this._MEASURED_WEIGHT;
			}
			set
			{
				if ((this._MEASURED_WEIGHT != value))
				{
					this.OnMEASURED_WEIGHTChanging(value);
					this.SendPropertyChanging();
					this._MEASURED_WEIGHT = value;
					this.SendPropertyChanged("MEASURED_WEIGHT");
					this.OnMEASURED_WEIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUALITY_ENTRY_ID", DbType="Int NOT NULL")]
		public int QUALITY_ENTRY_ID
		{
			get
			{
				return this._QUALITY_ENTRY_ID;
			}
			set
			{
				if ((this._QUALITY_ENTRY_ID != value))
				{
					this.OnQUALITY_ENTRY_IDChanging(value);
					this.SendPropertyChanging();
					this._QUALITY_ENTRY_ID = value;
					this.SendPropertyChanged("QUALITY_ENTRY_ID");
					this.OnQUALITY_ENTRY_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT_ENTRY")]
	public partial class PRODUCT_ENTRY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PRODUCT_ENTRY_ID;
		
		private int _RECIPE_ENTRY_ID;
		
		private string _LOT_CODE;
		
		private int _AMOUNT_PACKAGED;
		
		private int _AMOUNT_PRODUCED;
		
		private int _QUALITY_ENTRY_ID;
		
		private EntitySet<TRACE_ENTRY> _TRACE_ENTRies;
		
		private EntityRef<QUALITY_ENTRY> _QUALITY_ENTRY;
		
		private EntityRef<RECIPE_ENTRY> _RECIPE_ENTRY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRODUCT_ENTRY_IDChanging(int value);
    partial void OnPRODUCT_ENTRY_IDChanged();
    partial void OnRECIPE_ENTRY_IDChanging(int value);
    partial void OnRECIPE_ENTRY_IDChanged();
    partial void OnLOT_CODEChanging(string value);
    partial void OnLOT_CODEChanged();
    partial void OnAMOUNT_PACKAGEDChanging(int value);
    partial void OnAMOUNT_PACKAGEDChanged();
    partial void OnAMOUNT_PRODUCEDChanging(int value);
    partial void OnAMOUNT_PRODUCEDChanged();
    partial void OnQUALITY_ENTRY_IDChanging(int value);
    partial void OnQUALITY_ENTRY_IDChanged();
    #endregion
		
		public PRODUCT_ENTRY()
		{
			this._TRACE_ENTRies = new EntitySet<TRACE_ENTRY>(new Action<TRACE_ENTRY>(this.attach_TRACE_ENTRies), new Action<TRACE_ENTRY>(this.detach_TRACE_ENTRies));
			this._QUALITY_ENTRY = default(EntityRef<QUALITY_ENTRY>);
			this._RECIPE_ENTRY = default(EntityRef<RECIPE_ENTRY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_ENTRY_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PRODUCT_ENTRY_ID
		{
			get
			{
				return this._PRODUCT_ENTRY_ID;
			}
			set
			{
				if ((this._PRODUCT_ENTRY_ID != value))
				{
					this.OnPRODUCT_ENTRY_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_ENTRY_ID = value;
					this.SendPropertyChanged("PRODUCT_ENTRY_ID");
					this.OnPRODUCT_ENTRY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECIPE_ENTRY_ID", DbType="Int NOT NULL")]
		public int RECIPE_ENTRY_ID
		{
			get
			{
				return this._RECIPE_ENTRY_ID;
			}
			set
			{
				if ((this._RECIPE_ENTRY_ID != value))
				{
					if (this._RECIPE_ENTRY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRECIPE_ENTRY_IDChanging(value);
					this.SendPropertyChanging();
					this._RECIPE_ENTRY_ID = value;
					this.SendPropertyChanged("RECIPE_ENTRY_ID");
					this.OnRECIPE_ENTRY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOT_CODE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LOT_CODE
		{
			get
			{
				return this._LOT_CODE;
			}
			set
			{
				if ((this._LOT_CODE != value))
				{
					this.OnLOT_CODEChanging(value);
					this.SendPropertyChanging();
					this._LOT_CODE = value;
					this.SendPropertyChanged("LOT_CODE");
					this.OnLOT_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMOUNT_PACKAGED", DbType="Int NOT NULL")]
		public int AMOUNT_PACKAGED
		{
			get
			{
				return this._AMOUNT_PACKAGED;
			}
			set
			{
				if ((this._AMOUNT_PACKAGED != value))
				{
					this.OnAMOUNT_PACKAGEDChanging(value);
					this.SendPropertyChanging();
					this._AMOUNT_PACKAGED = value;
					this.SendPropertyChanged("AMOUNT_PACKAGED");
					this.OnAMOUNT_PACKAGEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMOUNT_PRODUCED", DbType="Int NOT NULL")]
		public int AMOUNT_PRODUCED
		{
			get
			{
				return this._AMOUNT_PRODUCED;
			}
			set
			{
				if ((this._AMOUNT_PRODUCED != value))
				{
					this.OnAMOUNT_PRODUCEDChanging(value);
					this.SendPropertyChanging();
					this._AMOUNT_PRODUCED = value;
					this.SendPropertyChanged("AMOUNT_PRODUCED");
					this.OnAMOUNT_PRODUCEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUALITY_ENTRY_ID", DbType="Int NOT NULL")]
		public int QUALITY_ENTRY_ID
		{
			get
			{
				return this._QUALITY_ENTRY_ID;
			}
			set
			{
				if ((this._QUALITY_ENTRY_ID != value))
				{
					if (this._QUALITY_ENTRY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQUALITY_ENTRY_IDChanging(value);
					this.SendPropertyChanging();
					this._QUALITY_ENTRY_ID = value;
					this.SendPropertyChanged("QUALITY_ENTRY_ID");
					this.OnQUALITY_ENTRY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_ENTRY_TRACE_ENTRY", Storage="_TRACE_ENTRies", ThisKey="PRODUCT_ENTRY_ID", OtherKey="PRODUCT_ENTRY_ID")]
		public EntitySet<TRACE_ENTRY> TRACE_ENTRies
		{
			get
			{
				return this._TRACE_ENTRies;
			}
			set
			{
				this._TRACE_ENTRies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUALITY_ENTRY_PRODUCT_ENTRY", Storage="_QUALITY_ENTRY", ThisKey="QUALITY_ENTRY_ID", OtherKey="QUALITY_ENTRY_ID", IsForeignKey=true)]
		public QUALITY_ENTRY QUALITY_ENTRY
		{
			get
			{
				return this._QUALITY_ENTRY.Entity;
			}
			set
			{
				QUALITY_ENTRY previousValue = this._QUALITY_ENTRY.Entity;
				if (((previousValue != value) 
							|| (this._QUALITY_ENTRY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUALITY_ENTRY.Entity = null;
						previousValue.PRODUCT_ENTRies.Remove(this);
					}
					this._QUALITY_ENTRY.Entity = value;
					if ((value != null))
					{
						value.PRODUCT_ENTRies.Add(this);
						this._QUALITY_ENTRY_ID = value.QUALITY_ENTRY_ID;
					}
					else
					{
						this._QUALITY_ENTRY_ID = default(int);
					}
					this.SendPropertyChanged("QUALITY_ENTRY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECIPE_ENTRY_PRODUCT_ENTRY", Storage="_RECIPE_ENTRY", ThisKey="RECIPE_ENTRY_ID", OtherKey="RECIPE_ENTRY_ID", IsForeignKey=true)]
		public RECIPE_ENTRY RECIPE_ENTRY
		{
			get
			{
				return this._RECIPE_ENTRY.Entity;
			}
			set
			{
				RECIPE_ENTRY previousValue = this._RECIPE_ENTRY.Entity;
				if (((previousValue != value) 
							|| (this._RECIPE_ENTRY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RECIPE_ENTRY.Entity = null;
						previousValue.PRODUCT_ENTRies.Remove(this);
					}
					this._RECIPE_ENTRY.Entity = value;
					if ((value != null))
					{
						value.PRODUCT_ENTRies.Add(this);
						this._RECIPE_ENTRY_ID = value.RECIPE_ENTRY_ID;
					}
					else
					{
						this._RECIPE_ENTRY_ID = default(int);
					}
					this.SendPropertyChanged("RECIPE_ENTRY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRACE_ENTRies(TRACE_ENTRY entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT_ENTRY = this;
		}
		
		private void detach_TRACE_ENTRies(TRACE_ENTRY entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT_ENTRY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUALITY_ENTRY")]
	public partial class QUALITY_ENTRY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QUALITY_ENTRY_ID;
		
		private System.DateTime _DATE;
		
		private System.TimeSpan _TIME;
		
		private string _EMPLOYEE_NAME;
		
		private int _RECIPE_ENTRY_ID;
		
		private double _WEIGHT_1;
		
		private double _WEIGHT_2;
		
		private double _WEIGHT_3;
		
		private string _TEMPER;
		
		private string _APPEARANCE;
		
		private string _TASTE_TEST;
		
		private EntitySet<BAR_WEIGHT_CHECK_ENTRY> _BAR_WEIGHT_CHECK_ENTRies;
		
		private EntitySet<PRODUCT_ENTRY> _PRODUCT_ENTRies;
		
		private EntityRef<RECIPE_ENTRY> _RECIPE_ENTRY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQUALITY_ENTRY_IDChanging(int value);
    partial void OnQUALITY_ENTRY_IDChanged();
    partial void OnDATEChanging(System.DateTime value);
    partial void OnDATEChanged();
    partial void OnTIMEChanging(System.TimeSpan value);
    partial void OnTIMEChanged();
    partial void OnEMPLOYEE_NAMEChanging(string value);
    partial void OnEMPLOYEE_NAMEChanged();
    partial void OnRECIPE_ENTRY_IDChanging(int value);
    partial void OnRECIPE_ENTRY_IDChanged();
    partial void OnWEIGHT_1Changing(double value);
    partial void OnWEIGHT_1Changed();
    partial void OnWEIGHT_2Changing(double value);
    partial void OnWEIGHT_2Changed();
    partial void OnWEIGHT_3Changing(double value);
    partial void OnWEIGHT_3Changed();
    partial void OnTEMPERChanging(string value);
    partial void OnTEMPERChanged();
    partial void OnAPPEARANCEChanging(string value);
    partial void OnAPPEARANCEChanged();
    partial void OnTASTE_TESTChanging(string value);
    partial void OnTASTE_TESTChanged();
    #endregion
		
		public QUALITY_ENTRY()
		{
			this._BAR_WEIGHT_CHECK_ENTRies = new EntitySet<BAR_WEIGHT_CHECK_ENTRY>(new Action<BAR_WEIGHT_CHECK_ENTRY>(this.attach_BAR_WEIGHT_CHECK_ENTRies), new Action<BAR_WEIGHT_CHECK_ENTRY>(this.detach_BAR_WEIGHT_CHECK_ENTRies));
			this._PRODUCT_ENTRies = new EntitySet<PRODUCT_ENTRY>(new Action<PRODUCT_ENTRY>(this.attach_PRODUCT_ENTRies), new Action<PRODUCT_ENTRY>(this.detach_PRODUCT_ENTRies));
			this._RECIPE_ENTRY = default(EntityRef<RECIPE_ENTRY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUALITY_ENTRY_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QUALITY_ENTRY_ID
		{
			get
			{
				return this._QUALITY_ENTRY_ID;
			}
			set
			{
				if ((this._QUALITY_ENTRY_ID != value))
				{
					this.OnQUALITY_ENTRY_IDChanging(value);
					this.SendPropertyChanging();
					this._QUALITY_ENTRY_ID = value;
					this.SendPropertyChanged("QUALITY_ENTRY_ID");
					this.OnQUALITY_ENTRY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE", DbType="Date NOT NULL")]
		public System.DateTime DATE
		{
			get
			{
				return this._DATE;
			}
			set
			{
				if ((this._DATE != value))
				{
					this.OnDATEChanging(value);
					this.SendPropertyChanging();
					this._DATE = value;
					this.SendPropertyChanged("DATE");
					this.OnDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIME", DbType="Time NOT NULL")]
		public System.TimeSpan TIME
		{
			get
			{
				return this._TIME;
			}
			set
			{
				if ((this._TIME != value))
				{
					this.OnTIMEChanging(value);
					this.SendPropertyChanging();
					this._TIME = value;
					this.SendPropertyChanged("TIME");
					this.OnTIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMPLOYEE_NAME
		{
			get
			{
				return this._EMPLOYEE_NAME;
			}
			set
			{
				if ((this._EMPLOYEE_NAME != value))
				{
					this.OnEMPLOYEE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._EMPLOYEE_NAME = value;
					this.SendPropertyChanged("EMPLOYEE_NAME");
					this.OnEMPLOYEE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECIPE_ENTRY_ID", DbType="Int NOT NULL")]
		public int RECIPE_ENTRY_ID
		{
			get
			{
				return this._RECIPE_ENTRY_ID;
			}
			set
			{
				if ((this._RECIPE_ENTRY_ID != value))
				{
					if (this._RECIPE_ENTRY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRECIPE_ENTRY_IDChanging(value);
					this.SendPropertyChanging();
					this._RECIPE_ENTRY_ID = value;
					this.SendPropertyChanged("RECIPE_ENTRY_ID");
					this.OnRECIPE_ENTRY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WEIGHT_1", DbType="Float NOT NULL")]
		public double WEIGHT_1
		{
			get
			{
				return this._WEIGHT_1;
			}
			set
			{
				if ((this._WEIGHT_1 != value))
				{
					this.OnWEIGHT_1Changing(value);
					this.SendPropertyChanging();
					this._WEIGHT_1 = value;
					this.SendPropertyChanged("WEIGHT_1");
					this.OnWEIGHT_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WEIGHT_2", DbType="Float NOT NULL")]
		public double WEIGHT_2
		{
			get
			{
				return this._WEIGHT_2;
			}
			set
			{
				if ((this._WEIGHT_2 != value))
				{
					this.OnWEIGHT_2Changing(value);
					this.SendPropertyChanging();
					this._WEIGHT_2 = value;
					this.SendPropertyChanged("WEIGHT_2");
					this.OnWEIGHT_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WEIGHT_3", DbType="Float NOT NULL")]
		public double WEIGHT_3
		{
			get
			{
				return this._WEIGHT_3;
			}
			set
			{
				if ((this._WEIGHT_3 != value))
				{
					this.OnWEIGHT_3Changing(value);
					this.SendPropertyChanging();
					this._WEIGHT_3 = value;
					this.SendPropertyChanged("WEIGHT_3");
					this.OnWEIGHT_3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPER", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TEMPER
		{
			get
			{
				return this._TEMPER;
			}
			set
			{
				if ((this._TEMPER != value))
				{
					this.OnTEMPERChanging(value);
					this.SendPropertyChanging();
					this._TEMPER = value;
					this.SendPropertyChanged("TEMPER");
					this.OnTEMPERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APPEARANCE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string APPEARANCE
		{
			get
			{
				return this._APPEARANCE;
			}
			set
			{
				if ((this._APPEARANCE != value))
				{
					this.OnAPPEARANCEChanging(value);
					this.SendPropertyChanging();
					this._APPEARANCE = value;
					this.SendPropertyChanged("APPEARANCE");
					this.OnAPPEARANCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TASTE_TEST", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TASTE_TEST
		{
			get
			{
				return this._TASTE_TEST;
			}
			set
			{
				if ((this._TASTE_TEST != value))
				{
					this.OnTASTE_TESTChanging(value);
					this.SendPropertyChanging();
					this._TASTE_TEST = value;
					this.SendPropertyChanged("TASTE_TEST");
					this.OnTASTE_TESTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUALITY_ENTRY_BAR_WEIGHT_CHECK_ENTRY", Storage="_BAR_WEIGHT_CHECK_ENTRies", ThisKey="QUALITY_ENTRY_ID", OtherKey="QUALITY_ENTRY_ID")]
		public EntitySet<BAR_WEIGHT_CHECK_ENTRY> BAR_WEIGHT_CHECK_ENTRies
		{
			get
			{
				return this._BAR_WEIGHT_CHECK_ENTRies;
			}
			set
			{
				this._BAR_WEIGHT_CHECK_ENTRies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUALITY_ENTRY_PRODUCT_ENTRY", Storage="_PRODUCT_ENTRies", ThisKey="QUALITY_ENTRY_ID", OtherKey="QUALITY_ENTRY_ID")]
		public EntitySet<PRODUCT_ENTRY> PRODUCT_ENTRies
		{
			get
			{
				return this._PRODUCT_ENTRies;
			}
			set
			{
				this._PRODUCT_ENTRies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECIPE_ENTRY_QUALITY_ENTRY", Storage="_RECIPE_ENTRY", ThisKey="RECIPE_ENTRY_ID", OtherKey="RECIPE_ENTRY_ID", IsForeignKey=true)]
		public RECIPE_ENTRY RECIPE_ENTRY
		{
			get
			{
				return this._RECIPE_ENTRY.Entity;
			}
			set
			{
				RECIPE_ENTRY previousValue = this._RECIPE_ENTRY.Entity;
				if (((previousValue != value) 
							|| (this._RECIPE_ENTRY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RECIPE_ENTRY.Entity = null;
						previousValue.QUALITY_ENTRies.Remove(this);
					}
					this._RECIPE_ENTRY.Entity = value;
					if ((value != null))
					{
						value.QUALITY_ENTRies.Add(this);
						this._RECIPE_ENTRY_ID = value.RECIPE_ENTRY_ID;
					}
					else
					{
						this._RECIPE_ENTRY_ID = default(int);
					}
					this.SendPropertyChanged("RECIPE_ENTRY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BAR_WEIGHT_CHECK_ENTRies(BAR_WEIGHT_CHECK_ENTRY entity)
		{
			this.SendPropertyChanging();
			entity.QUALITY_ENTRY = this;
		}
		
		private void detach_BAR_WEIGHT_CHECK_ENTRies(BAR_WEIGHT_CHECK_ENTRY entity)
		{
			this.SendPropertyChanging();
			entity.QUALITY_ENTRY = null;
		}
		
		private void attach_PRODUCT_ENTRies(PRODUCT_ENTRY entity)
		{
			this.SendPropertyChanging();
			entity.QUALITY_ENTRY = this;
		}
		
		private void detach_PRODUCT_ENTRies(PRODUCT_ENTRY entity)
		{
			this.SendPropertyChanging();
			entity.QUALITY_ENTRY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RECIPE_ENTRY")]
	public partial class RECIPE_ENTRY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RECIPE_ENTRY_ID;
		
		private string _RECIPE_NAME;
		
		private double _MOLD_GOAL_WEIGHT;
		
		private EntitySet<PRODUCT_ENTRY> _PRODUCT_ENTRies;
		
		private EntitySet<QUALITY_ENTRY> _QUALITY_ENTRies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRECIPE_ENTRY_IDChanging(int value);
    partial void OnRECIPE_ENTRY_IDChanged();
    partial void OnRECIPE_NAMEChanging(string value);
    partial void OnRECIPE_NAMEChanged();
    partial void OnMOLD_GOAL_WEIGHTChanging(double value);
    partial void OnMOLD_GOAL_WEIGHTChanged();
    #endregion
		
		public RECIPE_ENTRY()
		{
			this._PRODUCT_ENTRies = new EntitySet<PRODUCT_ENTRY>(new Action<PRODUCT_ENTRY>(this.attach_PRODUCT_ENTRies), new Action<PRODUCT_ENTRY>(this.detach_PRODUCT_ENTRies));
			this._QUALITY_ENTRies = new EntitySet<QUALITY_ENTRY>(new Action<QUALITY_ENTRY>(this.attach_QUALITY_ENTRies), new Action<QUALITY_ENTRY>(this.detach_QUALITY_ENTRies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECIPE_ENTRY_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RECIPE_ENTRY_ID
		{
			get
			{
				return this._RECIPE_ENTRY_ID;
			}
			set
			{
				if ((this._RECIPE_ENTRY_ID != value))
				{
					this.OnRECIPE_ENTRY_IDChanging(value);
					this.SendPropertyChanging();
					this._RECIPE_ENTRY_ID = value;
					this.SendPropertyChanged("RECIPE_ENTRY_ID");
					this.OnRECIPE_ENTRY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECIPE_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RECIPE_NAME
		{
			get
			{
				return this._RECIPE_NAME;
			}
			set
			{
				if ((this._RECIPE_NAME != value))
				{
					this.OnRECIPE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._RECIPE_NAME = value;
					this.SendPropertyChanged("RECIPE_NAME");
					this.OnRECIPE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOLD_GOAL_WEIGHT", DbType="Float NOT NULL")]
		public double MOLD_GOAL_WEIGHT
		{
			get
			{
				return this._MOLD_GOAL_WEIGHT;
			}
			set
			{
				if ((this._MOLD_GOAL_WEIGHT != value))
				{
					this.OnMOLD_GOAL_WEIGHTChanging(value);
					this.SendPropertyChanging();
					this._MOLD_GOAL_WEIGHT = value;
					this.SendPropertyChanged("MOLD_GOAL_WEIGHT");
					this.OnMOLD_GOAL_WEIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECIPE_ENTRY_PRODUCT_ENTRY", Storage="_PRODUCT_ENTRies", ThisKey="RECIPE_ENTRY_ID", OtherKey="RECIPE_ENTRY_ID")]
		public EntitySet<PRODUCT_ENTRY> PRODUCT_ENTRies
		{
			get
			{
				return this._PRODUCT_ENTRies;
			}
			set
			{
				this._PRODUCT_ENTRies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECIPE_ENTRY_QUALITY_ENTRY", Storage="_QUALITY_ENTRies", ThisKey="RECIPE_ENTRY_ID", OtherKey="RECIPE_ENTRY_ID")]
		public EntitySet<QUALITY_ENTRY> QUALITY_ENTRies
		{
			get
			{
				return this._QUALITY_ENTRies;
			}
			set
			{
				this._QUALITY_ENTRies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCT_ENTRies(PRODUCT_ENTRY entity)
		{
			this.SendPropertyChanging();
			entity.RECIPE_ENTRY = this;
		}
		
		private void detach_PRODUCT_ENTRies(PRODUCT_ENTRY entity)
		{
			this.SendPropertyChanging();
			entity.RECIPE_ENTRY = null;
		}
		
		private void attach_QUALITY_ENTRies(QUALITY_ENTRY entity)
		{
			this.SendPropertyChanging();
			entity.RECIPE_ENTRY = this;
		}
		
		private void detach_QUALITY_ENTRies(QUALITY_ENTRY entity)
		{
			this.SendPropertyChanging();
			entity.RECIPE_ENTRY = null;
		}
	}
}
#pragma warning restore 1591
